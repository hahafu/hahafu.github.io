<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[struts2_02]]></title>
    <url>%2F2019%2F04%2F17%2Fstruts2_02%2F</url>
    <content type="text"><![CDATA[struts2学习_02struts2执行过程 浏览器向服务器发送请求。 比如：localhost:8080/struts2_test1/userAction.action，Tomcat接收到请求，Tomcatserver来选择处理这个请求的Web应用，然后由struts2_test1这个web项目处理请求。 Tomcat服务器读取struts2_test1项目下的web.xml文件。 在web.xml下找到配置的struts2过滤器，请求会经过过滤器，`&lt;url-pattern&gt;/*&lt;/url-pattern&gt;`表示过滤所有请求。过滤器会在服务器启动时创建。 struts过滤器实现的功能、 第一步：获取请求路劲，得到路径中的userAction值 第二步：到src目录下找到struts.xml文件，使用dom4j解析得到xml文件中的内容，把拿到userAction值到struts.xml，找到action标签，匹配name是否相同 第三步：匹配name相同，找到所在action标签的class属性值，得到action全路径，使用反射实现功能。 反射实现过程： （1）.得到class。class clazz = class.forName(&quot;action全路径&quot;) （2）.得到名称是execute的方法。Method method = clazz.getMethod(&quot;execute&quot;) （3）.方法执行。Object obj = method.Invoke() 第四步：得到action的返回值，回到struts.xml中找到action标签下的result标签，配置result标签的name属性值，值一样跳转至相应的页面]]></content>
  </entry>
  <entry>
    <title><![CDATA[struts2_01]]></title>
    <url>%2F2019%2F04%2F16%2Fstruts2_01%2F</url>
    <content type="text"><![CDATA[struts2学习_01一、struts2概述1、Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互。2、Struts 2是Struts的下一代产品，是在 struts 1和WebWork的技术基础上进行了合并的全新的Struts 2框架。其全新的Struts 2的体系结构与Struts 1的体系结构差别巨大。Struts 2以WebWork为核心，采用拦截器的机制来处理用户的请求，这样的设计也使得业务逻辑控制器能够与ServletAPI完全脱离开，所以Struts 2可以理解为WebWork的更新产品。虽然从Struts 1到Struts 2有着太大的变化，但是相对于WebWork，Struts 2的变化很小。 二、struts2框架入门 struts2版本为struts-2.3.24 第一步：导入struts2框架jar包（1）从struts2官网下载完整包解压，在lib目录中有jar包，不能把这些jar包都导入项目中，其中很多jar包用不上 （2）到apps目录中，找到示例程序解压，然后找到示例程序下的lib目录，复制里面的jar包到自己新建的web项目中 第二部：在web.xml中配置struts过滤器 123456789&lt;filter&gt; &lt;filter-name&gt;struts&lt;/filter-name&gt; &lt;filter-class&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt; &lt;/filter&gt; &lt;filter-mapping&gt; &lt;filter-name&gt;struts&lt;/filter-name&gt; &lt;url-pattern&gt;/*&lt;/url-pattern&gt; &lt;/filter-mapping&gt; 第三步：创建action （1）新建一个普通类，然后在类中写execute方法 123456789101112public class HelloAction extends &#123; /** *(1)每次访问servlet时，都会执行service方法 *(2)每次访问action,默认执行execute方法 */ private static final long serialVersionUID = 1L; public String execute() &#123; return "ok"; &#125;&#125; 第四步：配置action的访问路径 （1）创建struts2核心配置文件， 核心配置文件名称和位置是固定的， 位置必须在src下面，名称 struts.xml （2）引入dtd约束 1234&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN" "http://struts.apache.org/dtds/struts-2.3.dtd"&gt; （3）struts.xml配置action访问路径 123456789&lt;struts&gt; &lt;!-- package标签的name属性值为包名，extends="struts-default"就是继承struts-default.xml，它里面定义了许多跳转类型、拦截器等一些常用的东西，namespace：命名空间，默认为'/'表示webapp根目录 --&gt; &lt;package name="hello" extends="struts-default" namespace="/"&gt; &lt;!-- action标签的name属性值为访问名称--&gt; &lt;action name="userAction" class="cn.com.action.HelloAction"&gt; &lt;result name="ok"&gt;/hello.jsp&lt;/result&gt; &lt;/action&gt; &lt;/package&gt;&lt;/struts&gt; 然后把项目部署到Tomcat中，在浏览器中访问，访问路劲为localhost:8080/struts2_test1/userAction.action，localhost:8080表示本机8080端口，也就是Tomcat 服务器端口，后面接上项目名和action名，用“/”隔开]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F16%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
